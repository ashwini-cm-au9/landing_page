function getLocalIpAddress() {
  return new Promise((resolve, reject) => {
    const peerConnection = new RTCPeerConnection({ iceServers: [] });
    peerConnection.createDataChannel('');

    peerConnection.onicecandidate = (event) => {
      if (!event.candidate) {
        // No more ICE candidates, resolve with null
        resolve(null);
        return;
      }

      const candidate = event.candidate.candidate;
      const ipAddress = candidate.split(' ')[4];
      if (ipAddress) {
        // Found an IP address, resolve with it
        resolve(ipAddress);
      }
    };

    // Create an offer to trigger icecandidate events
    peerConnection.createOffer()
      .then((offer) => peerConnection.setLocalDescription(offer))
      .catch(reject);
  });
}

// Usage:
getLocalIpAddress()
  .then((ipAddress) => {
    console.log('System IP Address:', ipAddress);
  })
  .catch((error) => {
    console.error('Error retrieving IP Address:', error);
  });
